#include <math.h>
#include <stdio.h>
#include <string.h>
#include <stdlib.h>
#include <assert.h>
#include <limits.h>
#include <stdbool.h>

typedef struct stack
{
int data;
struct stack* next;

}st;

void push(st** top, int data)
{
    st* new = (st*)malloc(sizeof(st));
    
    new->data = data;
    new->next = *top;
    *top = new;
    
}

int peek(st* top)
{
    return top->data;
}

int empty(st* top)
{
    if(top==NULL)
    {
        return 1;
    }
    return 0;
}
void pop(st** top)
{
    
        st* temp=*top;
        *top=(*top)->next;
        free(temp);
        temp=NULL;    
}
int main() {
   
    int n,j,x;
    scanf("%d", &n);
    int arr[n];
    int i;
    for(i=0;i<n;i++)
    {
        scanf("%d", &arr[i]);
        
    }
    st*t=(st*)malloc(sizeof(st));
    t=NULL;
 
    push(&t,0);
    int s=0,m=0,y=0;
     for(i=1;i<n;i++)
    {
         
         while(!empty(t)&&arr[i]<arr[peek(t)]){
                 
                      x=arr[peek(t)];
                    int y=peek(t);
                     pop(&t);
             if(!empty(t))
                     s=x*(i-peek(t)-1);
                   if(empty(t)){
                        
                        s=x*((i));
                        
                        }       
               
             
       
             if(m<s)
                 m=s;
             
          
         
         }
             push(&t,i);
         
     
    
     }
  
    while(!empty(t)){
        
           int x=arr[peek(t)];
          pop(&t);
        if(!empty(t))
           s=(i-peek(t)-1)*x;
            if(empty(t))
           s=i*x;
           
           if(m<s)
                 m=s;
         
                }
    
      printf("%d", m);
    return 0;
}